{"version":3,"sources":["carousel/NextArrow.js","carousel/PreviousArrow.js","carousel/Rating.js","carousel/Images.js","carousel/Carousel.js"],"names":["NextArrow","nextArrowStyle","performSlideNext","onClick","debounce","style","role","className","PreviousArrow","previousArrowStyle","performSlidePrevious","Rating","starsToRender","count","starArray","i","push","display","alignItems","lineHeight","margin","borderLeft","borderRight","map","item","key","color","marginLeft","Images","slideInfo","prevIndex","slideIndex","imagesToShow","CarouselContainer","styled","div","Image","img","animateCarousel","keyframes","ImageContainer","TopContainer","SlideContainer","textStyle","wordWrap","id","src","image","category","title","price","reviews","rating","Carousel","images","useState","setSlideIndex","setPrevIndex","currentSlides","setCurrentSlides","setSlideInfo","showPrevious","setShowPrevious","showNext","setShowNext","previousSlides","setPreviousSlides","opacity","backgroundColor","border","outline","useEffect","Math","abs","removedElement","pop","length","mutatedCurrentSlides","shift"],"mappings":"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","file":"static/js/4.71d6da05.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React from 'react';\nimport { debounce } from 'lodash';\nimport PropTypes from 'prop-types';\n\n\nconst NextArrow = ({ nextArrowStyle, performSlideNext }) => (\n  <div\n    onClick={debounce(performSlideNext, 200)}\n    style={nextArrowStyle}\n    role=\"button\"\n  >\n    <i className=\"fas fa-chevron-right fa-2x\" />\n  </div>\n);\n\nNextArrow.propTypes = {\n  nextArrowStyle: PropTypes.shape({}).isRequired,\n  performSlideNext: PropTypes.func.isRequired,\n};\n\nexport default NextArrow;\n","/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport { debounce } from 'lodash';\nimport PropTypes from 'prop-types';\n\n\nconst PreviousArrow = ({ previousArrowStyle, performSlidePrevious }) => (\n  <div\n    onClick={debounce(performSlidePrevious, 200)}\n    style={previousArrowStyle}\n    role=\"button\"\n  >\n    <i className=\"fas fa-chevron-left fa-2x\" />\n  </div>\n);\n\nPreviousArrow.propTypes = {\n  previousArrowStyle: PropTypes.shape({}).isRequired,\n  performSlidePrevious: PropTypes.func.isRequired,\n};\n\nexport default PreviousArrow;\n","import React from 'react';\n\nconst Rating = ({ starsToRender, count }) => {\n  const starArray = [];\n  for (let i = 0; i < starsToRender; i++) {\n    starArray.push(i);\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '2px',\n      margin: 0,\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n    }}\n    >\n      {starArray.map((item, i) => (\n        <div key={i} style={{ color: 'gold', lineHeight: '2px' }}>\n          <i className=\"fas fa-star\" />\n        </div>\n      ))}\n      <div style={{\n        display: 'flex', lineHeight: '2px', marginLeft: '5px', color: 'grey',\n      }}\n      >\n        {count}\n\n      </div>\n    </div>\n  );\n};\n\nexport default Rating;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nconst Images = ({\n  slideInfo, prevIndex, slideIndex, imagesToShow,\n}) => {\n  const CarouselContainer = styled.div`\n  display:flex;\n  align-self:center;\n  align-items:center;\n  height:400px;\n  overflow-X:hidden;\n  overflow-Y:hidden;\n  `;\n\n  const Image = styled.img`\n  width:100%;\n  height:100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  box-shadow: rgba(0, 0, 0, 0.8) 3px 3px 10px inset;\n  border-left:5px solid transparent;\n  border-right:5px solid transparent;\n  `;\n\n  const animateCarousel = keyframes`\n  from {\n    transform:translateX(${prevIndex}%);\n  }\n  to {\n    transform:translateX(${slideIndex}%);\n  }\n  `;\n\n  const ImageContainer = styled.div`\n  max-width:${100 / imagesToShow}%;\n  min-width:${100 / imagesToShow}%;\n  animation-name: ${animateCarousel};\n  height:300px;\n  animation-duration: 700ms;\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  `;\n\n  const TopContainer = styled.div`\n  width:100%;\n  height:auto;\n  `;\n  // max-width:${100 / imagesToShow}%;\n  // min-width:${100 / imagesToShow}%;\n  const SlideContainer = styled.div`\n  width:100%;\n  position:relative;\n  padding-top:56.25%;\n  `;\n\n  const textStyle = {\n    color: '#1d1b1b',\n    // lineHeight:'14px',\n    wordWrap: 'wrap',\n    borderLeft: '5px solid transparent',\n    borderRight: '5px solid transparent',\n  };\n\n  return (\n    <CarouselContainer className=\"CarouselContainer\">\n      {slideInfo.map((item, id) => (\n        <ImageContainer className=\"ImageContainer\" key={id}>\n          <TopContainer>\n            <SlideContainer>\n              <Image className=\"Image\" src={item.image} />\n            </SlideContainer>\n          </TopContainer>\n          {/* <TextContainer> */}\n          <div style={textStyle}>{item.category}</div>\n          <div style={textStyle}>{item.title}</div>\n          <div style={textStyle}>\n            {`$${item.price} per person`}\n          </div>\n          {/* </TextContainer> */}\n          <Rating starsToRender={item.reviews.rating} count={item.reviews.count} />\n        </ImageContainer>\n      ))}\n    </CarouselContainer>\n  );\n};\n\nImages.propTypes = {\n  slideIndex: PropTypes.number.isRequired,\n  imagesToShow: PropTypes.node.isRequired,\n  prevIndex: PropTypes.number.isRequired,\n  slideInfo: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    reviews: PropTypes.shape({\n      rating: PropTypes.number.isRequired,\n      count: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default Images;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport NextArrow from './NextArrow';\nimport PreviousArrow from './PreviousArrow';\nimport Images from './Images';\nimport './Carousel.css';\n\nfunction Carousel({ images, imagesToShow }) {\n  const [slideIndex, setSlideIndex] = useState(0); // animation purpose\n  const [prevIndex, setPrevIndex] = useState(0); // animation purpose\n  const [currentSlides, setCurrentSlides] = useState([]); // slides to come on right or left click\n  const [slideInfo, setSlideInfo] = useState([]); // to store initial array\n  const [showPrevious, setShowPrevious] = useState(false);// to show hide previous arrow\n  const [showNext, setShowNext] = useState(true);// to show hide next arrow\n  const [previousSlides, setPreviousSlides] = useState([]);\n\n\n  const previousArrowStyle = {\n    opacity: showPrevious ? 1 : 0,\n    backgroundColor: 'transparent',\n    border: 'none',\n    outline: 'none',\n  };\n  const nextArrowStyle = {\n    opacity: showNext ? 1 : 0,\n    backgroundColor: 'transparent',\n    border: 'none',\n    outline: 'none',\n  };\n\n  const performSlideNext = () => { // to move forward in slide\n    if (currentSlides.length <= imagesToShow) {\n      return;\n    }\n    if (currentSlides.length <= (imagesToShow + 1)) {\n      setShowNext(false);\n    }\n    const mutatedCurrentSlides = [...currentSlides];\n    const removedElement = mutatedCurrentSlides.shift();\n\n    setPreviousSlides([...previousSlides, removedElement]);\n\n    setCurrentSlides(mutatedCurrentSlides); // to prevent next\n    setShowPrevious(true);\n    setPrevIndex(slideIndex);// to animate from last left point\n    setSlideIndex(slideIndex - 100);\n  };\n\n  const performSlidePrevious = () => { // / to move back in slide\n    if ((Math.abs(slideIndex) - 100) === 0) {\n      setShowPrevious(false);\n    }\n    if (slideIndex === 0) {\n      return;\n    }\n\n    const mutatedPreviousSildes = [...previousSlides];\n    const removedElement = mutatedPreviousSildes.pop();\n    setCurrentSlides([...currentSlides, removedElement]);\n    // adding removed element to current array to make available when user clicks next\n    setShowNext(true);\n    setPrevIndex(slideIndex);// to animate from last left point\n    setSlideIndex(slideIndex + 100);\n  };\n\n  useEffect(() => {\n    setSlideInfo(images);\n    setCurrentSlides(images);\n    setSlideIndex(0);\n    setPrevIndex(0);\n    setShowPrevious(false);\n    setShowNext(true);\n  }, [images, imagesToShow]);\n\n\n  return (\n    <div className=\"SliderWrapper\">\n      <div className=\"Slider\">\n        <PreviousArrow\n          performSlidePrevious={performSlidePrevious}\n          previousArrowStyle={previousArrowStyle}\n        />\n        <Images\n          slideInfo={slideInfo}\n          prevIndex={prevIndex}\n          slideIndex={slideIndex}\n          imagesToShow={imagesToShow}\n        />\n        <NextArrow\n          performSlideNext={performSlideNext}\n          nextArrowStyle={nextArrowStyle}\n        />\n      </div>\n    </div>\n  );\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  imagesToShow: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n"],"sourceRoot":""}